stages:
  - build-test
  - deploy

build-test:
  image: ubuntu:latest
  variables:
    RUST_VERSION: "stable"
    ZIG_VERSION: "0.10.0"
    CARGO_LAMBDA_VERSION: "v1.0.3"
  before_script:
    - apt-get update -qy
    - apt-get install -y curl jq wget xz-utils build-essential 
  stage: build-test
  script:
    - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUST_VERSION
    - wget https://ziglang.org/download/${ZIG_VERSION}/zig-linux-x86_64-${ZIG_VERSION}.tar.xz
    - tar -xf zig-linux-x86_64-${ZIG_VERSION}.tar.xz  
    - mv zig-linux-x86_64-${ZIG_VERSION}/* /usr/local/bin
    - export PATH="$HOME/.cargo/bin:$PATH" 
    - rustc --version
    - zig version
    - make lint 
    - make format 
    - make test 
    - make build 

# We don't do deploy here but locally because Gitlab will take too long, but it will work just around 50 minutes of deployment
# deploy:
#   image: docker:stable
#   stage: deploy  
#   services:
#     - docker:20.10.16-dind
#   needs: ["build-test"]  
#   before_script:
#     - apk add --update --no-cache curl py-pip
#   script:
#     - pip install awscli
#     - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $EC || exit 1  # Login to ECR (exit on failure)
#     - make deploy 
#     - docker tag cloudfinal:latest $ECR || exit 1   # Tag image (exit on failure)
#     - docker push $ECR || exit 1    # Push image (exit on failure)